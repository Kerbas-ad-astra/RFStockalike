@PART[bd125vectorjet]:FOR[RealPlume]
{
	PLUME
    {
        name = Turbofan           //pre-fabbed plume you want
        transformName = thrust_transform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		%powerEffectName =  Turbofan
		%spoolEffectName = Turbofan-Spool
		!fxOffset
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
        @CONFIG,*   //Add the effect to every engine config
        {
            %powerEffectName = Turbofan
        }
    }
}
@PART[bdMiniJet]:FOR[RealPlume]
{
	PLUME
    {
        name = Turbofan           //pre-fabbed plume you want
        transformName = thrust_transform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		%powerEffectName =  Turbofan
		%spoolEffectName = Turbofan-Spool
		!fxOffset
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
        @CONFIG,*   //Add the effect to every engine config
        {
            %powerEffectName = Turbofan
        }
    }
}Kerolox-Vernier
@PART[bahaRetractEngine]:FOR[RealPlume]
{
	PLUME
    {
        name = Kerolox-Vernier            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
	PLUME
    {
        name = Hypergolic-Vernier            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// = Kerolox-Vernier
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
        @CONFIG[LqdMethane+LqdOxygen,Kerosene+LqdOxygen]   //Add the effect to every engine config
        {
            %powerEffectName = Kerolox-Vernier
        }
		@CONFIG[MMH+NTO]   //Add the effect to every engine config
        {
            %powerEffectName = Hypergolic-Vernier
        }
    }
}
@PART[bahaSRadialEngine]:FOR[RealPlume]
{
	PLUME
    {
        name = Kerolox-Vernier            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
	PLUME
    {
        name = Hypergolic-Vernier            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// = Kerolox-Vernier
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
        @CONFIG[LqdMethane+LqdOxygen,Kerosene+LqdOxygen]   //Add the effect to every engine config
        {
            %powerEffectName = Kerolox-Vernier
        }
		@CONFIG[MMH+NTO]   //Add the effect to every engine config
        {
            %powerEffectName = Hypergolic-Vernier
        }
    }
}
@PART[bahaTrrEngine]:FOR[RealPlume]
{
	PLUME
    {
        name = Hypergolic-Vernier            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// = Hypergolic-Vernier
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG,*  //Add the effect to every engine config
        {
            %powerEffectName = Hypergolic-Vernier
        }
    }
}
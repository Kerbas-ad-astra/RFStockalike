@PART[NBjetBasic0m]:FOR[RealPlume]
{
	PLUME
    {
        name = Turbofan            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,-0.36           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 0.66                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		%powerEffectName =  Turbofan
		%spoolEffectName = Turbofan-Spool
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG,*  //Add the effect to every engine config
        {
			%powerEffectName = Turbofan
        }
    }
}
@PART[NBjetTurbo0m]:FOR[RealPlume]
{
	PLUME
    {
        name = Turbojet            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,-0.25           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 0.66                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// = Turbojet
		%spoolEffectName = Turbojet-Spool
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG,*  //Add the effect to every engine config
        {
			%powerEffectName = Turbojet
        }
    }
}
@PART[NB0mLFOengine1]:FOR[RealPlume]
{
	PLUME
    {
        name = Hypergolic-Upper            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0.66           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 0.66                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
	PLUME
    {
        name = Hydrolox-Upper            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0.95           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 0.45                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// =  Hypergolic-Upper
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG[Hydrazine]  //Add the effect to every engine config
        {
            %powerEffectName = Hypergolic-Upper
        }
		@CONFIG[MMH+NTO]  //Add the effect to every engine config
        {
            %powerEffectName = Hypergolic-Upper
        }
		@CONFIG[LqdHydrogen+LqdOxygen]  //Add the effect to every engine config
        {
            %powerEffectName = Hydrolox-Upper
        }
    }
}
@PART[NB0mMonoEngine1]:FOR[RealPlume]
{
	PLUME
    {
        name = Hypergolic-OMS-White            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,-0.55           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 0.8                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// =  Hypergolic-OMS-White
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG,*  //Add the effect to every engine config
        {
            %powerEffectName = Hypergolic-OMS-White
        }
    }
}
@PART[NB2mNuclearEngine]:FOR[RealPlume]
{
	PLUME
    {
        name = Hydrogen-NTR            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,1           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1.66                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// =  Hydrogen-NTR
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG,*  //Add the effect to every engine config
        {
            %powerEffectName = Hydrogen-NTR
        }
    }
}
@PART[NB3mQuadEngine]:FOR[RealPlume]
{
	PLUME
    {
        name = Hydrolox-Lower            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,2.66           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 2.2                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
	PLUME
    {
        name = Hypergolic-Lower            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,2.5           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 3                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// =  Hypergolic-Lower
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG[UDMH+NTO]  //Add the effect to every engine config
        {
            %powerEffectName = Hypergolic-Lower
        }
		@CONFIG[LqdHydrogen+LqdOxygen]  //Add the effect to every engine config
        {
            %powerEffectName = Hydrolox-Lower
        }
    }
}
@PART[NB3mHoundEngine]:FOR[RealPlume]
{
	PLUME
    {
        name = Hypergolic-Upper            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,1.2           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1.2                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
	PLUME
    {
        name = Hydrolox-Upper            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,1.55           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 1                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// =  Hypergolic-Upper
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG[UDMH+NTO,MMH+NTO]  //Add the effect to every engine config
        {
            %powerEffectName = Hypergolic-Upper
        }
		@CONFIG[LqdHydrogen+LqdOxygen]  //Add the effect to every engine config
        {
            %powerEffectName = Hydrolox-Upper
        }
    }
}
@PART[NBflingatron]:FOR[RealPlume]
{
	PLUME
    {
        name = Solid-Sepmotor            //pre-fabbed plume you want
        transformName = thrustTransform //which transform to attach the plume
        localRotation = 0,0,0           //Optional - Any rotation needed
        localPosition = 0,0,0.47           //Any offset needed
        //flare|plumePosition are optional, and conflict with localPosition.
      //flarePosition = 0,0,1         //If localPosition is insufficient
      //plumePosition = 0,0,2         //Specify flare and plume positions separately.
        //Only specify one of these
        fixedScale = 0.8                  //Size adjustment to resize to engine
        energy = 1                      //Adjust length of plume
        speed = 1                       //Adjust speed to fit resize, 
                                        //generally close to 1:1 with scale.
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesRF
		// =  Solid-Sepmotor
    }
    @MODULE[ModuleEngineConfigs]
    {
        %type = ModuleEnginesRF
		@CONFIG,*  //Add the effect to every engine config
        {
            %powerEffectName = Solid-Sepmotor
        }
    }
}
